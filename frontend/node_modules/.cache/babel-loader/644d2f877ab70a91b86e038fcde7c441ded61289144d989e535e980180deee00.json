{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL\n});\nexport const attendanceAPI = {\n  getAll: (filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.date) params.append('date', filters.date);\n    if (filters.search) params.append('search', filters.search);\n    if (filters.year) params.append('year', filters.year);\n    if (filters.month) params.append('month', filters.month);\n    if (filters.week) params.append('week', filters.week);\n    if (filters.status) params.append('status', filters.status);\n    return api.get(`/attendance?${params.toString()}`);\n  },\n  create: attendanceData => {\n    return api.post('/attendance', attendanceData);\n  },\n  delete: id => {\n    return api.delete(`/attendance/${id}`);\n  },\n  // NEW: Employee history methods\n  getEmployeeHistory: (employeeId, filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.year) params.append('year', filters.year);\n    if (filters.month) params.append('month', filters.month);\n    return api.get(`/attendance/employee-history/${employeeId}?${params.toString()}`);\n  },\n  getEmployeeDetails: (employeeId, filters = {}) => {\n    const params = new URLSearchParams();\n    if (filters.year) params.append('year', filters.year);\n    if (filters.month) params.append('month', filters.month);\n    if (filters.week) params.append('week', filters.week);\n    return api.get(`/attendance/employee-details/${employeeId}?${params.toString()}`);\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","attendanceAPI","getAll","filters","params","URLSearchParams","date","append","search","year","month","week","status","get","toString","attendanceData","post","delete","id","getEmployeeHistory","employeeId","getEmployeeDetails"],"sources":["C:/Users/user/attendance-tracker/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n});\r\n\r\nexport const attendanceAPI = {\r\n  getAll: (filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    if (filters.date) params.append('date', filters.date);\r\n    if (filters.search) params.append('search', filters.search);\r\n    if (filters.year) params.append('year', filters.year);\r\n    if (filters.month) params.append('month', filters.month);\r\n    if (filters.week) params.append('week', filters.week);\r\n    if (filters.status) params.append('status', filters.status);\r\n    \r\n    return api.get(`/attendance?${params.toString()}`);\r\n  },\r\n  \r\n  create: (attendanceData) => {\r\n    return api.post('/attendance', attendanceData);\r\n  },\r\n  \r\n  delete: (id) => {\r\n    return api.delete(`/attendance/${id}`);\r\n  },\r\n\r\n  // NEW: Employee history methods\r\n  getEmployeeHistory: (employeeId, filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    if (filters.year) params.append('year', filters.year);\r\n    if (filters.month) params.append('month', filters.month);\r\n    \r\n    return api.get(`/attendance/employee-history/${employeeId}?${params.toString()}`);\r\n  },\r\n  \r\n  getEmployeeDetails: (employeeId, filters = {}) => {\r\n    const params = new URLSearchParams();\r\n    if (filters.year) params.append('year', filters.year);\r\n    if (filters.month) params.append('month', filters.month);\r\n    if (filters.week) params.append('week', filters.week);\r\n    \r\n    return api.get(`/attendance/employee-details/${employeeId}?${params.toString()}`);\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;AAEhD,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,aAAa,GAAG;EAC3BC,MAAM,EAAEA,CAACC,OAAO,GAAG,CAAC,CAAC,KAAK;IACxB,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,CAACG,IAAI,EAAEF,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACG,IAAI,CAAC;IACrD,IAAIH,OAAO,CAACK,MAAM,EAAEJ,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACK,MAAM,CAAC;IAC3D,IAAIL,OAAO,CAACM,IAAI,EAAEL,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACM,IAAI,CAAC;IACrD,IAAIN,OAAO,CAACO,KAAK,EAAEN,MAAM,CAACG,MAAM,CAAC,OAAO,EAAEJ,OAAO,CAACO,KAAK,CAAC;IACxD,IAAIP,OAAO,CAACQ,IAAI,EAAEP,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACQ,IAAI,CAAC;IACrD,IAAIR,OAAO,CAACS,MAAM,EAAER,MAAM,CAACG,MAAM,CAAC,QAAQ,EAAEJ,OAAO,CAACS,MAAM,CAAC;IAE3D,OAAOd,GAAG,CAACe,GAAG,CAAC,eAAeT,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC;EACpD,CAAC;EAEDf,MAAM,EAAGgB,cAAc,IAAK;IAC1B,OAAOjB,GAAG,CAACkB,IAAI,CAAC,aAAa,EAAED,cAAc,CAAC;EAChD,CAAC;EAEDE,MAAM,EAAGC,EAAE,IAAK;IACd,OAAOpB,GAAG,CAACmB,MAAM,CAAC,eAAeC,EAAE,EAAE,CAAC;EACxC,CAAC;EAED;EACAC,kBAAkB,EAAEA,CAACC,UAAU,EAAEjB,OAAO,GAAG,CAAC,CAAC,KAAK;IAChD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,CAACM,IAAI,EAAEL,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACM,IAAI,CAAC;IACrD,IAAIN,OAAO,CAACO,KAAK,EAAEN,MAAM,CAACG,MAAM,CAAC,OAAO,EAAEJ,OAAO,CAACO,KAAK,CAAC;IAExD,OAAOZ,GAAG,CAACe,GAAG,CAAC,gCAAgCO,UAAU,IAAIhB,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC;EACnF,CAAC;EAEDO,kBAAkB,EAAEA,CAACD,UAAU,EAAEjB,OAAO,GAAG,CAAC,CAAC,KAAK;IAChD,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IACpC,IAAIF,OAAO,CAACM,IAAI,EAAEL,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACM,IAAI,CAAC;IACrD,IAAIN,OAAO,CAACO,KAAK,EAAEN,MAAM,CAACG,MAAM,CAAC,OAAO,EAAEJ,OAAO,CAACO,KAAK,CAAC;IACxD,IAAIP,OAAO,CAACQ,IAAI,EAAEP,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACQ,IAAI,CAAC;IAErD,OAAOb,GAAG,CAACe,GAAG,CAAC,gCAAgCO,UAAU,IAAIhB,MAAM,CAACU,QAAQ,CAAC,CAAC,EAAE,CAAC;EACnF;AACF,CAAC;AAED,eAAehB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}